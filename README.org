#+TITLE: GitHub Status
#+SUBTITLE: A Custom Resource for Concourse
#+LATEX: \pagebreak

* Overview

Create and update GitHub statuses from Concourse.

* Usage

Add the resource to your pipeline's ~resource_types~ (requires Concourse 0.74.0+)

#+BEGIN_SRC yaml
  resource_types:
    - name: github-status
      type: registry-image
      source:
	repository: eu.gcr.io/halfpipe-io/engineering-enablement/github-status-resource
	username: _json_key
	password: ((halfpipe-gcr.private_key))
#+END_SRC

* Source Configuration

|--------------+----------+---------+---------------------------------------------|
| Name         | Required | Default | Description                                 |
|--------------+----------+---------+---------------------------------------------|
| repo         | Yes      |         | The GitHub repository in ~user/repo~ format |
| access_token | Yes      |         | The access token to use with the GitHub API |
| path         | No       | git     | Relative path to read .git/gitref           |
|--------------+----------+---------+---------------------------------------------|

* Behaviour

** ~out~ Update the status for a commit

*** Parameters

To set a single status for the current commit of the repository specify these parameters:

|-------------+----------+--------------------------------------+--------------------------------------------------|
| Name        | Required | Default                              | Description                                      |
|-------------+----------+--------------------------------------+--------------------------------------------------|
| state       | Yes      |                                      | One of ~pending~, ~success~, or ~failure~        |
| context     | No       | $BUILD_PIPELINE_NAME/$BUILD_JOB_NAME | The ~context~ for the status being updated       |
|-------------+----------+--------------------------------------+--------------------------------------------------|

** ~check~ Does nothing.

*** Parameters

- None

** ~in~ Does nothing - just echoes back stdin to stdout to allow running after put

*** Parameters

- None
